# /Users/user/Desktop/Core Guild Project/projects/colabs/eng-teams/core/personal-website/prototype/.github/workflows/deploy-credential-fix.yml
# Simplified credential fix deployment workflow
name: 🔧 Credential Fix Deployment

on:
  workflow_dispatch:
    inputs:
      test_credentials:
        description: 'Test credentials before deployment'
        required: false
        type: boolean
        default: true

jobs:
  # ===============================
  # CREDENTIAL VERIFICATION
  # ===============================
  credential-test:
    name: 🔑 Credential Verification
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_credentials == 'true' }}
    
    steps:
      - name: 🧪 Test FTP Connection
        run: |
          echo "🔑 TESTING FTP CREDENTIALS"
          echo "=========================="
          
          # Test 1: Basic connectivity
          echo "📡 Testing server connectivity..."
          if timeout 15 bash -c "</dev/tcp/files.hostinger.com/21"; then
            echo "✅ Server files.hostinger.com:21 is reachable"
          else
            echo "❌ Server files.hostinger.com:21 is not reachable"
          fi
          
          # Test 2: Alternative IP connectivity
          if timeout 15 bash -c "</dev/tcp/185.239.210.65/21"; then
            echo "✅ Server 185.239.210.65:21 is reachable"
          else
            echo "❌ Server 185.239.210.65:21 is not reachable"
          fi
          
          # Test 3: FTP handshake test
          echo "🤝 Testing FTP handshake..."
          echo "quit" | timeout 20 telnet files.hostinger.com 21 || echo "Telnet test completed"
          
          echo "🔍 Credential format check:"
          echo "Username should be format: u300282944 (numbers only)"
          echo "Password should be FTP-specific password from hPanel"

  # ===============================
  # MAIN DEPLOYMENT
  # ===============================
  deploy:
    name: 🚀 Deploy with Verified Credentials  
    runs-on: ubuntu-latest
    needs: [credential-test]
    if: always() && (needs.credential-test.result == 'success' || github.event.inputs.test_credentials == 'false')
    
    steps:
      - name: 📋 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
          
      - name: 🏗️ Build
        run: npm run build
          
      - name: 📁 Prepare deployment
        run: |
          mkdir -p deployment
          cp -r out/* deployment/
        
      - name: 🚀 FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: files.hostinger.com
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: ./deployment/
          server-dir: ./public_html/
          protocol: ftp
          port: 21
          log-level: verbose
          timeout: 120000
          security: loose

      # ===============================
      # POST-DEPLOYMENT VERIFICATION
      # ===============================
      - name: ⏳ Wait for propagation
        run: |
          echo "⏳ Waiting for file propagation..."
          sleep 60

      - name: 🧪 Verify deployment
        run: |
          echo "🧪 DEPLOYMENT VERIFICATION"
          echo "========================="
          
          # Test website accessibility
          echo "📡 Testing website accessibility..."
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" https://caiocastilho.com --connect-timeout 30)
          echo "HTTP Status: $STATUS"
          
          if [ "$STATUS" = "200" ]; then
            echo "✅ Website is accessible (HTTP 200)"
          else
            echo "⚠️ Website returned status: $STATUS"
          fi
          
          # Test specific content
          echo "🔍 Content verification..."
          CONTENT=$(curl -s https://caiocastilho.com --connect-timeout 30)
          
          if echo "$CONTENT" | grep -q "Caio"; then
            echo "✅ Content verification: PASSED"
          else
            echo "❌ Content verification: FAILED"
          fi

      # ===============================
      # DEPLOYMENT REPORT
      # ===============================
      - name: 📊 Deployment Report
        if: always()
        run: |
          echo "📊 DEPLOYMENT REPORT"
          echo "==================="
          echo "🌐 Domain: caiocastilho.com"
          echo "📦 Files deployed: $(find deployment/ -type f 2>/dev/null | wc -l || echo 'N/A')"
          echo "💾 Package size: $(du -sh deployment/ 2>/dev/null | cut -f1 || echo 'N/A')"
          echo "⏰ Deployment time: $(date -u)"
          echo ""
          
          echo "🚀 DEPLOYMENT COMPLETED"
          echo "Status: Check above logs for FTP deployment results"
            echo ""
            echo "🔧 TROUBLESHOOTING STEPS:"
            echo "1. Verify FTP credentials in Hostinger hPanel"
            echo "2. Check username format (should be numbers only: u300282944)"
            echo "3. Reset FTP password and update GitHub secrets"
            echo "4. Test credentials locally with FileZilla"
            echo "5. Contact Hostinger support if issues persist"
          fi
          
          echo ""
          echo "🔗 Next steps:"
          echo "- Visit: https://caiocastilho.com"
          echo "- Verify all pages load correctly"
          echo "- Test mobile responsiveness"
          echo "- Check all functionality" 