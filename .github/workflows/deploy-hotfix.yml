# /Users/user/Desktop/Core Guild Project/projects/colabs/eng-teams/core/personal-website/prototype/.github/workflows/deploy-hotfix.yml
# Professional FTP deployment workflow using industry best practices
name: 🚑 Hotfix Deploy

on:
  workflow_dispatch:
    inputs:
      deployment_method:
        description: 'Choose deployment method'
        required: true
        default: 'industry-standard'
        type: choice
        options:
        - industry-standard
        - debug-deployment
        - manual-debug

jobs:
  deploy-hotfix:
    name: 🚑 Emergency Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: 📋 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📚 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 📁 Prepare deployment directory
        run: |
          mkdir -p deployment
          cp -r out/* deployment/
          echo "📁 Deployment files prepared:"
          ls -la deployment/
          echo "📊 Total files to deploy:"
          find deployment/ -type f | wc -l
          
      - name: 🧹 Industry Standard Deployment (Recommended)
        if: ${{ github.event.inputs.deployment_method == 'industry-standard' }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: files.hostinger.com
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: ./deployment/
          server-dir: ./public_html/
          protocol: ftp
          port: 21
          log-level: verbose
          dangerous-clean-slate: true
          timeout: 60000
          security: loose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
            **/Thumbs.db
          
      - name: 🔧 Debug Deployment with Extensive Logging
        if: ${{ github.event.inputs.deployment_method == 'debug-deployment' }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: files.hostinger.com
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: ./deployment/
          server-dir: ./public_html/
          protocol: ftp
          port: 21
          log-level: verbose
          dangerous-clean-slate: true
          timeout: 120000
          security: loose
          dry-run: false
          
      - name: ⏳ Wait for file propagation
        if: ${{ github.event.inputs.deployment_method != 'manual-debug' }}
        run: |
          echo "⏳ Waiting 60 seconds for file propagation..."
          sleep 60
          
      - name: 🧪 Professional Verification
        if: ${{ github.event.inputs.deployment_method != 'manual-debug' }}
        run: |
          echo "🔍 Professional deployment verification..."
          
          # Test 1: Basic connectivity
          echo "📡 Test 1: Website accessibility"
          if curl -I https://caiocastilho.com --connect-timeout 15 -w "%{http_code}" | grep -q "200"; then
            echo "✅ Website is accessible (HTTP 200)"
          else
            echo "⚠️ Website returned non-200 status"
          fi
          
          # Test 2: Content verification
          echo "🔍 Test 2: Content verification"
          CONTENT=$(curl -s https://caiocastilho.com --connect-timeout 15)
          
          if echo "$CONTENT" | grep -q "Caio A. S. Castilho"; then
            echo "✅ SUCCESS: Our professional content is LIVE!"
            echo "🎉 Website deployed successfully!"
            echo "🌐 Access: https://caiocastilho.com"
          elif echo "$CONTENT" | grep -q "Está tudo pronto"; then
            echo "❌ ISSUE: Default Hostinger page still showing"
            echo "🔄 Files were uploaded but may not have replaced existing content"
            echo "📝 Manual verification needed in hPanel File Manager"
          else
            echo "⚠️ Unexpected content or connection issue"
            echo "📄 Content preview:"
            echo "$CONTENT" | head -10
          fi
          
          # Test 3: Technical verification
          echo "📄 Test 3: Technical structure"
          if echo "$CONTENT" | grep -q "Mechatronic Engineer"; then
            echo "✅ Professional title found"
          fi
          
          if echo "$CONTENT" | grep -q "github.com/Caioasc"; then
            echo "✅ Social links working"
          fi
          
          if echo "$CONTENT" | grep -q "_next/static"; then
            echo "✅ Next.js static assets detected"
          fi
          
      - name: 🔍 Manual Debug Information
        if: ${{ github.event.inputs.deployment_method == 'manual-debug' }}
        run: |
          echo "🔍 Manual Debug Information"
          echo "========================="
          echo "🌐 Domain: caiocastilho.com"
          echo "📁 FTP Server: files.hostinger.com"
          echo "👤 Username: u300282944"
          echo "📂 Target Directory: public_html"
          echo "🔑 Password: Check GitHub Secrets"
          echo ""
          echo "🧪 Testing connectivity:"
          ping -c 3 files.hostinger.com || echo "❌ Server not reachable"
          echo ""
          echo "📝 Recommended manual steps:"
          echo "1. Login to hPanel File Manager"
          echo "2. Navigate to public_html directory"
          echo "3. Delete ALL existing files"
          echo "4. Upload files from 'out' directory"
          echo "5. Verify index.html is in root of public_html"
          
      - name: 📊 Deployment Summary
        if: always()
        run: |
          echo "📊 DEPLOYMENT SUMMARY"
          echo "===================="
          echo "🌐 Domain: caiocastilho.com"
          echo "📦 Files deployed: $(find deployment/ -type f | wc -l)"
          echo "💾 Package size: $(du -sh deployment/ | cut -f1)"
          echo "⏰ Deployment time: $(date -u)"
          echo "🎯 Method: ${{ github.event.inputs.deployment_method }}"
          echo ""
          echo "🔗 Next steps:"
          echo "- Access: https://caiocastilho.com"
          echo "- Verify all pages work"
          echo "- Test mobile responsiveness"
          echo "- Check social media links" 